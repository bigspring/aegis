<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');class Login extends Public_Controller {		public function __construct()	{			parent::__construct();				$this->load->library(array('form_validation', 'ag_auth'));		$this->load->helper(array('url', 'email', 'ag_auth'));				if(logged_in())		{			$redirect = $this->ag_auth->config['auth_login']; // redirect to the default place			redirect($redirect);		}	}	/**	 * Index Page for this controller.	 */	public function index()	{					$this->form_validation->set_rules('username', 'Username', 'required|min_length[6]');		$this->form_validation->set_rules('password', 'Password', 'required|min_length[6]');		        $this->data['title'] = 'Login';        $this->data['description'] = 'Login';        $this->view = 'user/login/login';				if($this->form_validation->run() == FALSE)		{			$this->_render();		}		else		{			$username = set_value('username');			$password = $this->ag_auth->salt(set_value('password'));							// get the user's database record			$user = $this->ag_auth->get_user($username, 'email');			// if we have a user returned and their password matches			if($user->exists() && $user->password === $password)			{                // prepare our session data and login the user                $user_data = array('id' => $user->id, 'group' => $user->group_id);				$this->ag_auth->login_user($user_data);                $redirect = $this->config->item('auth_login'); //default redirect for ag-auth				redirect($redirect);			}			else			{				$this->messages->add('The username and password did not match or your account is disabled.', 'error');                $this->_render(); 			}		}	}}/* End of file login.php *//* Location: ./application/controllers/login.php */